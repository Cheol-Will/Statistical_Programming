dim(IMDB2)
complete.cases(IMDB[,12])
IMDB3 = IMDB[complete.cases(IMDB[,12]),]
colSums(is.na(IMDB3))
# 결측치를 특정값으로 대체할 경우
# Rawdata를 새로운 변수에 복사
IMDB$Metascore2 = IMDB$Metascore
# 결측치 대체
IMDB$Metascore2[is.na(IMDB$Metascore2)]=58.99
# 결측치 생략하고 계산
mean(IMDB$Revenue..Millions.) # NA 생성
mean(IMDB$Revenue..Millions.,na.rm = TRUE) # NA 생략하고 계산
library(ggplot2)
# 난수 생성
RB = rbinom(n = 400, size = 1, prob = 0.6)
RB
# 난수 생성
RB = rbinom(n = 400, size = 2, prob = 0.6)
RB
# 난수 생성
RB = rbinom(n = 400, size = 1, prob = 0.6)
RB
ggplot(NULL)+
geom_bar(aes(x = as.factor(RB), fill = as.factor(RB))) +
theme_bw() +
xlab("") + ylab("") +
scale_x_discrete(labels = c("실패","성공")) +
theme(legend.position = 'none')
X = c()
P = c()
for(k in 1:10){
RDB = dbinom(x = k, size = 10,prob = 0.4)
X = c(X,k)
P = c(P,RDB)
}
X
P
RDB
dbinom(x = 4, size = 10, prob = 0.4)
# 난수 생성
RB = rbinom(n = 400, size = 1, prob = 0.6)
RB
ggplot(NULL) +
geom_bar(aes(x = X, y = P),stat = 'identity') +
theme_bw() +
scale_x_continuous(breaks = seq(1,10)) +
xlab("성공횟수") + ylab("확률")
X = c()
P = c()
for(k in 1:10){
RDB = dbinom(x = k, size = 10,prob = 0.8)
X = c(X,k)
P = c(P,RDB)
}
ggplot(NULL) +
geom_bar(aes(x = X, y = P),stat = 'identity') +
theme_bw() +
scale_x_continuous(breaks = seq(1,10)) +
xlab("성공횟수") + ylab("확률")
for(k in 1:10){
RDB = dbinom(x = k, size = 10,prob = 0.8)
X = c(X,k)
P = c(P,RDB)
}
RDB
P
X
X = c()
P = c()
for(k in 1:10){
RDB = dbinom(x = k, size = 10,prob = 0.8)
X = c(X,k)
P = c(P,RDB)
}
ggplot(NULL) +
geom_bar(aes(x = X, y = P),stat = 'identity') +
theme_bw() +
scale_x_continuous(breaks = seq(1,10)) +
xlab("성공횟수") + ylab("확률")
library(ggplot2)
library(ggplot2)
ggplot(NULL) +
geom_bar(aes(x = X, y = P),stat = 'identity') +
theme_bw() +
scale_x_continuous(breaks = seq(1,10)) +
xlab("성공횟수") + ylab("확률")
# 다항분포
rmultinom(n = 1,size = 10,prob = c(0.2,0.5,0.3))
# 다항분포
rmultinom(n = 1,size = 10,prob = c(0.2,0.5,0.3))
# 다항분포
rmultinom(n = 1,size = 15,prob = c(0.2,0.5,0.3))
# 다항분포
rmultinom(n = 3,size = 3,prob = c(0.2,0.5,0.3))
t(rmultinom(n = 1,size = 10,prob = c(0.2,0.5,0.3)))
rmultinom(n = 1,size = 10,prob = c(0.2,0.5,0.3))
RM = as.data.frame(t(rmultinom(n = 1,size = 10,prob = c(0.2,0.5,0.3))))
RM = colSums(RM)
RM
ggplot(NULL) +
geom_bar(aes(x = names(RM), y= RM,fill = names(RM)),stat = 'identity') +
theme_bw() +
theme(legend.position = 'none') +
scale_x_discrete(labels = c("1","2","3")) +
xlab("") + ylab("")
# 다항분포
rmultinom(n = 1,size = 100,prob = c(0.2,0.5,0.3))
t(rmultinom(n = 1,size = 10,prob = c(0.2,0.5,0.3)))
RM = as.data.frame(t(rmultinom(n = 1,size = 10,prob = c(0.2,0.5,0.3))))
RM = colSums(RM)
ggplot(NULL) +
geom_bar(aes(x = names(RM), y= RM,fill = names(RM)),stat = 'identity') +
theme_bw() +
theme(legend.position = 'none') +
scale_x_discrete(labels = c("1","2","3")) +
xlab("") + ylab("")
RM
# 포아송 분포
RP = rpois(n = 100 ,lambda = 2)
RP
ggplot(Null) +
geom_bar(aex(x = as,factor(RP), fill = as.factor(RP)))+
theme_bar()+
xlab("성공횟수") + ylab("빈도") +
theme(legend.position = 'none')
ggplot(NULL) +
geom_bar(aex(x = as,factor(RP), fill = as.factor(RP)))+
theme_bar()+
xlab("성공횟수") + ylab("빈도") +
theme(legend.position = 'none')
ggplot(NULL) +
geom_bar(aes(x = as,factor(RP), fill = as.factor(RP)))+
theme_bar()+
xlab("성공횟수") + ylab("빈도") +
theme(legend.position = 'none')
ggplot(NULL) +
geom_bar(aes(x = as,factor(RP), fill = as.factor(RP)))+
theme_bw()+
xlab("성공횟수") + ylab("빈도") +
theme(legend.position = 'none')
# 포아송 분포
RP = rpois(n = 100 ,lambda = 2)
ggplot(NULL) +
geom_bar(aes(x = as.factor(RP),fill = as.factor(RP))) +
theme_bw() +
xlab("성공횟수") + ylab("빈도") +
theme(legend.position = 'none')
RP
RP > 10
ppois(q = 15, lambda = 20)
ppois(q = 15, lambda = 20, lower.tail = T)
# 결측치 처리를 위한 데이터의 분포 탐색
library(ggplot2)
ggplot(IMDB,aes(x=Revenue..Millions.)) +
geom_histogram(fill='royalblue', alpha = 0.4) +
ylab('') +
xlab("Revenue_Millions") +
theme_classic()
ggplot(IMDB,aes(x = "",y=Revenue..Millions.)) +
geom_boxplot(fill='red', alpha = 0.4,outlier.color = 'red') +
xlab('') +
ylab("Revenue_Millions") +
theme_classic()
summary(IMDB$Revenue..Millions.)
str(IMDB$Revenue..Millions.)
ggplot(IMDB,aes(x=as.factor(Year),y=Revenue..Millions.))+
geom_boxplot(aes(fill=as.factor(Year)),outlier.colour = 'red',alpha=I(0.4))+
xlab("년도") + ylab("수익") + guides(fill = FALSE) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
# 1분위수 계산
Q1 = quantile(IMDB$Revenue..Millions.,probs = c(0.25),na.rm = TRUE)
# 3분위수 계산
Q3 = quantile(IMDB$Revenue..Millions.,probs = c(0.75),na.rm = TRUE)
LC = Q1 - 1.5 * (Q3 - Q1) # 아래 울타리
UC = Q3 + 1.5 * (Q3 - Q1) # 위 울타리
IMDB2 = subset(IMDB,
Revenue..Millions. >  LC & Revenue..Millions. < UC)
# 7.문자열 추출
substr(IMBD$Actors[1], 1, 5)
IMBD$Actors
IMBD$Actors[1, 5]
IMBD$Actors[5]
# 7.문자열 추출
substr(IMBD$Actors[1], 1, 5)
IMBD[1]
IMBD
# 7.문자열 추출
# 첫번째 obs의 Actors변수에서 1 ~ 5번째에 해당하는 문자열 추출
substr(IMBD$Actors[1], 1, 3)
# 7.문자열 추출
# 첫번째 obs의 Actors변수에서 1 ~ 5번째에 해당하는 문자열 추출
substr(IMBD$Actors[1], 1, 10)
# 7.문자열 추출
# 첫번째 obs의 Actors변수에서 1 ~ 5번째에 해당하는 문자열 추출
substr(IMBD$Actors[1], 1, 18)
# 문자열 붙이기
paste(IMDB$Actors[1],"_",'A')
paste("asdfasdf", '-', "ASDF")
paste(IMDB$Actors[1],"_",'A',sep="") # 띄어쓰기 없이 붙이기
paste("asdfasdf","_",'A',sep="") # 띄어쓰기 없이 붙이기
paste("asdfasdf","_",'A',sep="||") # 띄어쓰기 없이 붙이기
# 문자열 분리
strsplit(as.character(IMDB$Actors[1]), split= ",")
# 문자열 분리
strsplit(as.character(IMDB$Actors[1]), split= ",")
strsplit("강.철.석", split = ".")
strsplit("강,철,석", split = ",")
# 문자열 대체
IMDB$Genre2=gsub(","," ",IMDB$Genre) # , 를 띄어쓰기로 대체
IMDB$Genre2
gsub(",", " ", c("강,철,석", "코,딩"))
install.packages("tm")
CORPUS = Corpus(VectorSource(IMDB$Genre2)) # 코퍼스 생성
# 텍스트 마이닝
library(tm) # tm 패키지 설치 필요
CORPUS = Corpus(VectorSource(IMDB$Genre2)) # 코퍼스 생성
CORPUS
VectorSource(IMDB$Genre2)
CORPUS_TM = tm_map(CORPUS,removePunctuation) # 특수문자 제거
CORPUS_TM
TDM=DocumentTermMatrix(CORPUS_TM) # 문서행렬 생성
inspect(TDM)
str(IMDB$Genre2)
TDM = as.data.frame(as.matrix(TDM)) # 문서행렬을 데이터프레임 형태로 만들어주기.
head(TDM)
a = 1
a
b <- 3
b
x1 = c(1:10)
x1
x1 = 1:10
x1
x1 = seq(1, 10, 3)
x1
y = rep(c(1, 2, 3), 3)
y
y = rep(c(1, 2, 3), c(1, 2, 3))
y
X = matrix()
X
X = matrix(
data = x1, nrow = 5)
)
X = matrix(
data = x1, nrow = 5)
X = matrix(
data = x1, nrow = 5)
x1 = rep(c(1, 2, 3, 4), c(1, 2, 3, 4))
X = matrix(
data = x1, nrow = 5)
X
df = data.frame(
X1 = x1, col_2 = x1
)
df
head(Df)
head(df)
length(x1)
len(x10)
dim(M)
dim(df)
'a':'c'
sample(letters,10)
s1 = sample(letters,10)
df = data.frame(X1 = x1, S1 = s1)
df
df[3, 1]
df[-2, 1]
df[-1, 1]
df[c(1, 2, 3), c(2, 1, 2)]
str(x1)
str(df)
x
x1
x = 1:10
x
x4 = as.character(x)
x4
str(x4)
S4 = sample(LETTERS, 10)
print(S4)
HR = read.csv('data/HR_comma_sep.csv')
View(HR)
str(HR)
summary(HR)
# left는 이직여부로 1은 이직을 나타낸다. 즉 명목형 변수에 속해야한다.
HR$Work_accident = as.factor(HR$Work_accident)
HR$left = as.factor(HR$left)
HR$promotion_last_5years = as.factor(HR$promotion_last_5years)
summary(HR$left)
summary(HR
)
HR$satisfaction_level_group_1 = ifelse(HR$satisfaction_level > 0.5, "High", "Low")
HR$satisfaction_level_group_1 = as.factor(HR$satisfaction_level_group_1)
HR
summary(HR)
HR$satisfaction_level_group_2 = ifelse(HR$satisfaction_level > 0.8, "High",
ifelse(HR$satisfaction_level > 0.5, "Mid", "Low"))
HR$satisfaction_level_group_2 = as.factor(HR$satisfaction_level_group_2)
summary(HR$satisfaction_level_group_2)
summary(HR)
head(HR)
summary(RH)
summary(HR)
subset(HR$salary == "high")
subset(HR, salary == "high")
head(subset(HR, salary == "high"))
library(plyr)
SS=ddply(HR, # 분석할 Data Set 설정
c("sales","salary"),summarise, # 집계 기준 변수 설정
M_SF = mean(satisfaction_level), # 컬럼명 및 계산 함수 설정
COUNT =length(sales),
M_WH = round(mean(average_montly_hours),2))
View(SS)
summary(HR$salary)
#ggplot2 기본 시각화
library(ggplot2)
library(ggthemes)
ddply(HR, c("Work_accident ", "left"),
M_SF = mean(satisfaction_level),
COUNT =length(sales))
SSS = ddply(HR, c("Work_accident ", "left"),
M_SF = mean(satisfaction_level),
COUNT =length(sales))
View(SSS)
SSS = ddply(HR, c("Work_accident ", "left"), summarise,
M_SF = mean(satisfaction_level),
COUNT =length(sales))
View(SSS)
IMDB <- read.csv('data/IMDB-Movie-Data.csv')
View(IMDB)
str(IMDB)
sum(is.na(IMDB$Metascore))
complete.cases(IMDB[,12])
# 결측치 생략하고 계산
mean(IMDB$Revenue..Millions.) # NA 생성
IMDB
ggplot(IMDB,aes(x=Revenue..Millions.)) +
geom_histogram(fill='royalblue', alpha = 0.4) +
ylab('') +
xlab("Revenue_Millions") +
theme_classic()
# 결측치 처리를 위한 데이터의 분포 탐색
library(ggplot2)
ggplot(IMDB,aes(x=Revenue..Millions.)) +
geom_histogram(fill='royalblue', alpha = 0.4) +
ylab('') +
xlab("Revenue_Millions") +
theme_classic()
ggplot(IMDB,aes(x = "",y=Revenue..Millions.)) +
geom_boxplot(fill='red', alpha = 0.4,outlier.color = 'red') +
xlab('') +
ylab("Revenue_Millions") +
theme_classic()
# 1분위수 계산
Q1 = quantile(IMDB$Revenue..Millions.,probs = c(0.25),na.rm = TRUE)
Q1
summary(IMDB$Revenue..Millions.)
summary(IMDB$Revenue..Millions.)[2]
summary(IMDB$Revenue..Millions.)[2] + summary(IMDB$Revenue..Millions.)[5]
x = 3
y = 5
x+y
'asdfasdf'
"hello wordld"
getwd()
getwd()
setwd()
x = 1
y = 2
z = x+y
z
getwd()
getwd()
getwd()
getwd()
source("Week 2")
setwd("C:/Rstudy/Introduction to Statistical Programming")
source("Week 2")
getwd()
setwd("C:/Rstudy/Introduction to Statistical Programming")
source("Week 2")
source("Week 2.r")
source("Week 2.R")
source("Week 2.R")
1L
# integer를 원한다면
1L
2L
3L
Inf
-Inf
NaN
0/0
1/0
x = 'will'
mode(x)
x = 0.5
mode(x)
x = 12L
mode(x)
x = 2+3i
mode(x)
x = F
mode(x)
# Attributes
class(x)
# Attributes
attributes(x)
# Attributes
x = 10
attributes(x)
x = c(1, 2, 3)
attributes(x)
y = c(4, 5, 6)
z = rbind(x, y)
attributes(z)
z
z = cbind(x, y)
z
# Data Structures
x = c(1, 2, 3, 4, 5)
length(x)
# Data Structures
x = 1:10
length(x)
y = c("will", '12 34', 'a')
is.vector(y)
z = matrix(x, nrow = 2)
is.matrix(z)
z
a = 1:12
z = array(a, dim = c(2, 3, 2))
z
is.array(z)
b = list(x = x, a = a)
b
b = list(X = x, A = a, z = z)
b
b$x
b$X
b = list(X = x, A = a, Z = z)
b$X
b$Z
z = data.frame(x, y)
y = sample(letters, 10)
z = data.frame(x, y)
z
letters
letters[:10]
letters[1:10]
x = rnorm(100)
x
y = hist(x)
y = hist(x, breaks = 100)
y = hist(x, breaks = 30)
y
y = hist(x, breaks = 40)
getwd()
# setwd()
x = 1
y = 2
z = x+y
print(z)
# integer를 원한다면
1L
2L
3L
Inf
-Inf
NaN
0/0
x = 'will'
mode(x)
x = 0.5
mode(x)
x = 12L
mode(x)
x = 2+3i
mode(x)
x = F
mode(x)
# Attributes
x = 10
attributes(x)
x = c(1, 2, 3)
y = c(4, 5, 6)
z = rbind(x, y)
attributes(z)
z = cbind(x, y)
z
# Data Structures
x = 1:10
length(x)
y = c("will", '12 34', 'a')
is.vector(y)
z = matrix(x, nrow = 2)
is.matrix(z)
a = 1:12
z = array(a, dim = c(2, 3, 2))
is.array(z)
b = list(X = x, A = a, Z = z)
b$X
b$Z
x = 1:10
y = sample(letters, 10)
z = data.frame(x, y)
x = rnorm(100)
y = hist(x, breaks = 40)
save.image("Week 2.RData")
